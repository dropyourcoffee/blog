---
layout: post
title:  "C++ String Tokenize"
date:   2017-08-21 12:43:53 +0900
categories: C/C++
---

C++에서 텍스트파일을 읽어와 처리를 해야 할 경우가 있다.
그런데 CFile를 이용해서 읽어오려면 버퍼 사이즈를 정해 주어야 하는등 번거러운 점이 있다.
이럴때 <CStdioFile>을 이용하면 쉽게 string 단위로 파일을 읽어올 수 있다.
{% highlight cpp %}
CStdioFile file;
CString readStr ;
CString FilePath;
FilePath="c:\\ListFile.txt";
int rtn = file.Open(FilePath,CStdioFile::modeReadWrite,0);  //읽기/쓰기모드로 열기
if(!rtn)
{
	printf("파일없음");
	return false;
}
while(file.ReadString(readStr))   //CString으로 읽어서
{
	cout<<readStr<<endl;
}
file.Close();
{% endhighlight %}

CList등과 연계하여 읽은 문자열을 잘라 구조체나 객체에 담아 관리하는데 쓰일 수 있다.


문자열을 파일에서 읽어들여
Tokenize함수를 이용하여 잘라 원하는 형태로 데이터를 담을 수 있습니다.

아래의 예제는 멀티바이트기준으로 작성하였습니다.
유니코드로 기동시 약간의 수정이 필요합니다.

{% highlight cpp %}
#include "stdafx.h"
#include <iostream>
using namespace std;

int _tmain(int argc, _TCHAR* argv[])
{
	CString inputStr;
	inputStr.Format("#사번:1111 #성명:홍길동 #부서:전산");
	CString buff;
        int curpos=0; //커서의 위치를 담을 변수
	while(curpos<inputStr.GetLength()) //커서의 위치가 문장의 끝보다 작을경우 계속 파싱
	{
		buff=inputStr.Tokenize("#",curpos); //구분자(여기서는 #)이 나올때까지 문자열을 파싱하여
                                                                  //buff에 담아줍니다.
		buff.Trim();                                  //양끝단 공백을 제거 해주는 함수
		cout<<buff<<endl;
	}

	return 0;
}
{% endhighlight %}